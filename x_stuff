    // Get the text
    var context = document.getElementById('myText').value;
    // Remove stopwords and special characters and convert to an array
    var contextArray = RemoveStopWords(context);
    // Map out the frequency of each word
    var frequencyMap = getFrequency(contextArray);
    // Convert to a 2D array and sort by occurence
    var sortedArray = convertToSortedArray(frequencyMap);
    // Get the number of times the most frequent word appears
    var arrayMax = Math.max.apply(Math, sortedArray.map(function (m) {
	return m[1];
    }));
    // Set the minimum to zero to allow all words in the text to be weighted
    var arrayMin = 0;
    // Prepare the HTML string
    var results = "<hr><p>2. Breakdown of text by frequency:</p><table><tr>";
    /*
     * Add words to the table, sorted by frequency and in descending order
     * Display the word, the frequency and the frequency scaled between 1 and 0
     * Remember to replace the values of the frequency column with the scaled weights
     */
    for (var i = 0; i < sortedArray.length; i++) {
	// Scale the frequency value between 1 and 0
	var featureScaled = scaleFeature(sortedArray[i][1], arrayMin, arrayMax);
	// Add the three columns to the table
	results += "<td>" + sortedArray[i][0] + "</td><td>" + sortedArray[i][1] + "</td><td>(" + featureScaled.toFixed(3) + ")</td>";
	// Convert to singular using Blake Embrey's awesome pluralize.js at https://github.com/blakeembrey/pluralize
	sortedArray[i][0] = pluralize.singular(sortedArray[i][0]);
	// Replace the frequency value with the scaled value
	sortedArray[i][1] = featureScaled;
	// Split the table into three columns
	if ((i + 1) % 3 === 0)
	    results += "</tr><tr>";
    }
    // Close the table
    results += "</tr></table>";
    // Send the HTML string to the view
    document.getElementById('frequencyTable').innerHTML = results;
    // Resort by word
    sortedArray = sort2EArray(sortedArray, 0, 'DESC');
    // Create an array from the words column
    var textWordsArray = sortedArray.map(function (tuple) {
	return tuple[0];
    });
    // Create and array to hold the scaled weights
    var matchedArray = [];
    /* Iterate through FEATURE_LIST. If the word is present in the list, record
     * the weight in matchedArray. Otherwise, enter 0.0
     */
    for (var i = 0; i < FEATURE_LIST.length; i++) {
	var index = textWordsArray.indexOf(FEATURE_LIST[i]);
	if (index === -1) {
	    matchedArray.push(0.0);
	} else {
	    matchedArray.push(sortedArray[index][1]);
	}
    }
    // Display the results
    var dataResults = "<hr><p>3. Text data weights matched to training set features:</p><table><tr>";
    for (var i = 0; i < FEATURE_LIST.length; i++) {
	// Highlight if not zero
	var highlight = (matchedArray[i] !== 0 ? "<span class=\"highlight\">" : "<span>");
	dataResults += "<td>" + highlight + FEATURE_LIST[i] + "<span></td><td>" + highlight + matchedArray[i].toFixed(3) + "</span></td>";
	// Split the table into three columns
	if ((i + 1) % 3 === 0)
	    dataResults += "</tr><tr>";
    }
    // Close the table
    dataResults += "</tr></table>";
    // Send the HTML string to the view
    document.getElementById('dataSetTable').innerHTML = dataResults;
    
    // Add data set identifier to end of matchedArray
    matchedArray.push(0);
    // Add matchedArray to data set
    ACRONYM_DATASET.push(matchedArray);
    
    // Display data sets in a table
    var weightsList = "<hr><p>4. Weights for training and test data:</p><table><tr>";
    for (var i = 0; i < ACRONYM_DATASET.length; i++) {
	for (var j = 0; j < ACRONYM_DATASET[i].length; j++) {
	    weightsList += "<td>" + ACRONYM_DATASET[i][j].toFixed(3) + "</td>";
	}
	weightsList += "</tr><tr>";
    }
    // Close the table
    weightsList += "</tr></table>";
    // Send the HTML string to the view
    document.getElementById('weightsList').innerHTML = weightsList;

    // The split is the amount of data you want for test. For example, .1 means use 90% of the data for training and 10% for training.    
    // BONUS! This actually updates the split each time you process text
    var theSplit = "<hr><p>5. The Split = " + (1 / (ACRONYM_DATASET.length)) + "</p>";
    document.getElementById('theSplit').innerHTML = theSplit;

    getAcronymData(theSplit);



AAA	American Automobile Association
AAA	Anti-Aircraft Artillery
AAA	Abdominal Aortic Aneurysm

CIA	Culinary Institute of America
CIA	Central Intelligence Agency
CIA	Confidentiality, Integrity and Availability

MIA	Missing In Action
MIA	Miami International Airport
MIA	Minneapolis Institute of Arts